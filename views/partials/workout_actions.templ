package partials

import (
	"fmt"
	"github.com/jovandeginste/workout-tracker/pkg/database"
	"github.com/jovandeginste/workout-tracker/views/helpers"
)

templ WorkoutActions(w *database.Workout) {
	if w.HasFile() {
		<form action={ templ.SafeURL(helpers.RouteFor(ctx, "workout-download", w.ID)) } method="get">
			<button class="download" title={ helpers.I18n(ctx, "download") }>
				<a>
					@helpers.IconFor("download")
				</a>
			</button>
		</form>
	}
	<form action={ templ.SafeURL(helpers.RouteFor(ctx, "workout-edit", w.ID)) } method="get">
		<button class="edit" title={ helpers.I18n(ctx, "edit") }>
			<a>
				@helpers.IconFor("edit")
			</a>
		</button>
	</form>
	if w.PublicUUID != nil {
		<form
			onsubmit="copyToClipboard('public_uuid'); showMessage('notice', '{ helpers.I18n(ctx, `Publicly shareable link was copied to clipboard`) }'); return false;"
		>
			<input
				type="text"
				name="public_uuid"
				id="public_uuid"
				class="hidden"
				value="..."
			/>
			<script>
    var uuidText = document.getElementById("public_uuid");
    uuidText.value = new URL(
      "{ helpers.RouteFor(ctx, "share" .PublicUUID }}",
      document.location,
    ).href;
  </script>
			<button class="share" title="{ helpers.I18n(ctx, `Copy publicly shareable link`) }">
				<a>
					@helpers.IconFor("share")
				</a>
			</button>
		</form>
	}
	<form action={ templ.SafeURL(helpers.RouteFor(ctx, "workout-share", w.ID)) } method="post">
		<button
			class="share dangerous"
			title={ helpers.I18n(ctx, `(Re)generate publicly shareable link`) }
		>
			<a>
				@helpers.IconFor("generate-share")
			</a>
		</button>
	</form>
	if w.HasFile() {
		<form action={ templ.SafeURL(helpers.RouteFor(ctx, "workout-refresh", w.ID)) } method="post">
			<button title={ helpers.I18n(ctx, "refresh") }>
				<a>
					@helpers.IconFor("refresh")
				</a>
			</button>
		</form>
		<form action={ templ.SafeURL(helpers.RouteFor(ctx, "workout-route-segment", w.ID)) } method="get">
			<button title={ helpers.I18n(ctx, "create route segment") }>
				<a>
					@helpers.IconFor("route-segment")
				</a>
			</button>
		</form>
	}
	<form onsubmit="return false">
		<button
			onclick="openModal('modalConfirmDelete', this)"
			data-id={ fmt.Sprintf("%d", w.ID) }
			class="dangerous"
			title={ helpers.I18n(ctx, "delete") }
		>
			<a>
				@helpers.IconFor("delete")
			</a>
		</button>
	</form>
	<div id={ fmt.Sprintf("modalConfirmDelete_%d", w.ID) } class="modal">
		<div class="window">
			<div class="flex justify-end p-2">
				<button
					onclick="closeModal('modalConfirmDelete', this)"
					data-id={ fmt.Sprintf("%d", w.ID) }
					type="button"
					class="close-modal"
				>
					<a>
						@helpers.IconFor("close")
					</a>
				</button>
			</div>
			<div class="modal-content">
				<h3>{ helpers.I18n(ctx, "Are you sure you want to delete this %s?", helpers.I18n(ctx, "workout")) }</h3>
				<div class="flex">
					<form method="post" action={ templ.SafeURL(helpers.RouteFor(ctx, "workout-delete", w.ID)) }>
						<button class="confirm">{ helpers.I18n(ctx, "Continue") }</button>
					</form>
					<form onsubmit="return false">
						<button
							onclick="closeModal('modalConfirmDelete', this)"
							data-id={ fmt.Sprintf("%d", w.ID) }
							class="cancel"
						>
							{ helpers.I18n(ctx, "Cancel") }
						</button>
					</form>
				</div>
			</div>
		</div>
	</div>
}
