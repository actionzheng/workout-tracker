// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package appviews

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"context"
	"github.com/jovandeginste/workout-tracker/pkg/database"
	"github.com/jovandeginste/workout-tracker/pkg/templatehelpers"
	"github.com/labstack/echo/v4"
	"github.com/vorlif/spreak/humanize"
	"time"
)

const timeFormat = "2006-01-02 15:04"

func iconFor(name string) string {
	return string(templatehelpers.IconFor(name))
}

func appEcho(ctx context.Context) *echo.Echo {
	if e := ctx.Value("echo"); e != nil {
		return e.(*echo.Echo)
	}

	return nil
}

func humanizer(ctx context.Context) *humanize.Humanizer {
	if h := ctx.Value("humanizer"); h != nil {
		return h.(*humanize.Humanizer)
	}

	return nil
}

func routeFor(ctx context.Context, name string, params ...any) string {
	e := appEcho(ctx)
	if e == nil {
		return "/invalid/route/#" + name
	}

	if rev := e.Reverse(name, params...); rev != "" {
		return rev
	}

	return "/invalid/route/#" + name
}

func CurrentUser(ctx context.Context) *database.User {
	if dbUser := ctx.Value("user_info"); dbUser != nil {
		return dbUser.(*database.User)
	}

	return database.AnonymousUser()
}

func RouteFor(name string, params ...any) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templ.Raw(routeFor(ctx, name, params)).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func UserPreferredUnits(ctx context.Context) *database.UserPreferredUnits {
	return CurrentUser(ctx).PreferredUnits()
}

func RelativeDate(ctx context.Context, t time.Time) string {
	return humanizer(ctx).NaturalTime(t)
}

func LocalDate(ctx context.Context, t time.Time) string {
	return t.In(CurrentUser(ctx).Timezone()).Format(timeFormat)
}

var _ = templruntime.GeneratedTemplate
